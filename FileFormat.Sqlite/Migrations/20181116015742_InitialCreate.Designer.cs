// <auto-generated />
using System;
using FileFormat.Sqlite;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FileFormat.Sqlite.Migrations
{
    [DbContext(typeof(FileFormatContext))]
    [Migration("20181116015742_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024");

            modelBuilder.Entity("FileFormat.Sqlite.Models.Data", b =>
                {
                    b.Property<int>("Key")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("LastWriteTime");

                    b.Property<string>("Name");

                    b.Property<int?>("ParentKey")
                        .IsRequired();

                    b.Property<byte[]>("Value");

                    b.HasKey("Key");

                    b.HasIndex("ParentKey");

                    b.ToTable("Datas");
                });

            modelBuilder.Entity("FileFormat.Sqlite.Models.Node", b =>
                {
                    b.Property<int>("Key")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("LastWriteTime");

                    b.Property<string>("Name");

                    b.Property<int?>("ParentKey");

                    b.HasKey("Key");

                    b.HasIndex("ParentKey");

                    b.ToTable("Nodes");
                });

            modelBuilder.Entity("FileFormat.Sqlite.Models.Parameter", b =>
                {
                    b.Property<string>("Key")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Value");

                    b.HasKey("Key");

                    b.ToTable("Parameters");
                });

            modelBuilder.Entity("FileFormat.Sqlite.Models.Data", b =>
                {
                    b.HasOne("FileFormat.Sqlite.Models.Node", "Parent")
                        .WithMany("ChildrenDatas")
                        .HasForeignKey("ParentKey")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FileFormat.Sqlite.Models.Node", b =>
                {
                    b.HasOne("FileFormat.Sqlite.Models.Node", "Parent")
                        .WithMany("ChildrenNodes")
                        .HasForeignKey("ParentKey")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
